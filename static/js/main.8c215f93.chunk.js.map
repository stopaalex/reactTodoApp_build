{"version":3,"sources":["TodoInput/TodoInput.js","TodoList/TodoList.js","TodoFilters/TodoFilters.js","App.js","serviceWorker.js","index.js"],"names":["TodoInput","className","onSubmit","this","props","addItem","id","ref","inputElement","value","currentItem","text","onChange","handleInput","required","htmlFor","type","Component","TodoList","createTask","item","complete","key","onClick","toggleItem","changePriority","priority","deleteItem","checkCompletion","todoEntries","entries","listItems","length","map","TodoFilters","sortItems","filter","defaultValue","updateSort","App","e","itemText","target","keyid","characters","i","charAt","Math","floor","random","created","Date","setState","preventDefault","newItem","state","items","saveList","push","window","localStorage","setItem","JSON","stringify","updateItems","filteredItems","sortedItems","sort","a","b","currentFilter","str","dir","updatedItems","getItem","parse","console","log","crerated","Boolean","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.8c215f93.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\n\r\nclass TodoInput extends Component {\r\n\r\n    // componentDidUpdate() {\r\n    //     this.props.inputElement.current.focus()\r\n    //   }\r\n\r\n    render () {\r\n        return (\r\n            <div className=\"todo-input-main\">\r\n\r\n                <div className=\"input-content\">\r\n                    <form onSubmit={this.props.addItem}>\r\n                        <input\r\n                            id=\"input\"\r\n                            ref={this.props.inputElement}\r\n                            value={this.props.currentItem.text}\r\n                            onChange={this.props.handleInput}\r\n                            required\r\n                        />\r\n                        <label htmlFor=\"input\">New Task</label>\r\n                        <button type=\"submit\">Add Task</button>\r\n                    </form>\r\n                </div>\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default TodoInput","import React, { Component } from 'react';\r\n\r\nimport './TodoList.css'\r\n\r\nclass TodoList extends Component {\r\n\r\n    createTask = item => {\r\n\r\n        if (!item.complete) {\r\n        return  <div className=\"item\"\r\n                     key={item}>\r\n                    <div className=\"toggle complete\"\r\n                         onClick={() => this.props.toggleItem(item.key)}></div>\r\n                    <div className=\"priority-wrapper\">\r\n                        <div onClick={() => this.props.changePriority(item.key,'up')} className=\"priority up\">^</div>\r\n                        {item.priority}\r\n                        <div onClick={() => this.props.changePriority(item.key,'down')} className=\"priority down\">^</div>\r\n                    </div>\r\n                    {item.text}\r\n                    <div className=\"delete\"\r\n                         onClick={() => this.props.deleteItem(item.key)}>\r\n                        x\r\n                    </div>\r\n                </div>\r\n        } else {\r\n        return  <div className=\"item complete\"\r\n                     key={item}>\r\n                    <div className=\"toggle incomplete\"\r\n                         onClick={() => this.props.toggleItem(item.key)}></div>\r\n                    <div className=\"priority-wrapper\">\r\n                        <div onClick={() => this.props.changePriority(item.key,'up')} className=\"priority up\">^</div>\r\n                        {item.priority}\r\n                        <div onClick={() => this.props.changePriority(item.key,'down')} className=\"priority down\">^</div>\r\n                    </div>\r\n                    {item.text}\r\n                    <div className=\"delete\"\r\n                         onClick={() => this.props.deleteItem(item.key)}>\r\n                        x\r\n                    </div>\r\n                </div>\r\n        }\r\n    }\r\n\r\n    checkCompletion = item => {\r\n\r\n    }\r\n\r\n    render () {\r\n        const todoEntries = this.props.entries;\r\n        let listItems = <div></div>;\r\n\r\n        if (todoEntries.length > 0) {\r\n            listItems = todoEntries.map(this.createTask);\r\n        } else {\r\n            listItems = <div className=\"no-tasks\">No tasks found, create one!</div>\r\n        }\r\n\r\n        return <div className=\"the-list\">\r\n                {listItems}\r\n               </div>\r\n    }\r\n\r\n}\r\n\r\nexport default TodoList","import React, { Component } from 'react';\r\n\r\nimport './TodoFilters.css';\r\n\r\nclass TodoFilters extends Component {\r\n\r\n    render() {\r\n\r\n        return <div>\r\n                   <div className=\"label\">Sort By:</div>\r\n                   <select ref={this.props.inputElement} onChange={this.props.sortItems} value={this.props.filter}>\r\n                       <option value=\"new\" defaultValue>Recently Created</option>\r\n                       <option value=\"old\">Oldest First</option>\r\n                       <option value=\"priority\">Priority</option>\r\n                       <option value=\"inc\">Incompleted</option>\r\n                   </select>\r\n                   <button className=\"update\" onClick={this.props.updateSort}>Update</button>\r\n               </div>\r\n    }\r\n}\r\n\r\nexport default TodoFilters;","import React, { Component } from 'react'\r\n// import logo from './logo.svg';\r\nimport './App.css';\r\nimport './lib/normalize.css';\r\n\r\n// --- import TodoList\r\n// import TodoList from './TodoList';\r\nimport TodoInput from './TodoInput/TodoInput';\r\nimport TodoList from './TodoList/TodoList';\r\nimport TodoFilters from './TodoFilters/TodoFilters';\r\n\r\nclass App extends Component {\r\n\r\n  constructor() {\r\n    super();\r\n    let items = [];\r\n    let sort = 'new';\r\n    if (window.localStorage.getItem('reactTodoSort')) {\r\n      sort = JSON.parse(window.localStorage.getItem('reactTodoSort')).sort;\r\n    }\r\n    if (window.localStorage.getItem('reactTodo')) {\r\n      if (window.localStorage.getItem('reactTodoSort')) {\r\n        if (sort === 'priority') {\r\n          items = JSON.parse(window.localStorage.getItem('reactTodo')).sort((a, b) => {\r\n            return b.priority - a.priority;\r\n          });\r\n        } else if (sort === 'new') {\r\n          items = JSON.parse(window.localStorage.getItem('reactTodo')).sort((a, b) => {\r\n            return new Date(b.created) - new Date(a.created);\r\n          });\r\n        } else if (sort === 'old') {\r\n          items = JSON.parse(window.localStorage.getItem('reactTodo')).sort((a, b) => {\r\n            return new Date(a.created) - new Date(b.created);\r\n          });\r\n        } else if (sort === 'inc') {\r\n          items = JSON.parse(window.localStorage.getItem('reactTodo')).sort((a, b) => {\r\n            // return new Date(a.created) - new Date(b.created);\r\n            if (a.complete === b.complete) {\r\n              return 0\r\n            } else if (a.complete) {\r\n              return 1\r\n            } else {\r\n              return -1\r\n            }\r\n          });\r\n        } else {\r\n          console.log('fuck');\r\n        }\r\n      }\r\n    }\r\n    this.state = {\r\n      items: items,\r\n      currentItem: { text: '', complete: false, key: '', crerated: '', priority: 0 },\r\n      currentFilter: sort\r\n    }\r\n  }\r\n\r\n  handleInput = e => {\r\n    const itemText = e.target.value\r\n\r\n    let keyid = '', characters = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\r\n    for (var i = 0; i < 32; i++) {\r\n      keyid += characters.charAt(Math.floor(Math.random() * characters.length));\r\n    }\r\n\r\n    const currentItem = { text: itemText, complete: false, key: keyid, created: new Date(), priority: 0 }\r\n    this.setState({\r\n      currentItem,\r\n    })\r\n  }\r\n\r\n  addItem = e => {\r\n    e.preventDefault()\r\n    const newItem = this.state.currentItem\r\n    if (newItem.text !== '') {\r\n      const items = [...this.state.items, newItem]\r\n      this.setState({\r\n        items: items,\r\n        currentItem: { text: '', complete: false, key: '', created: '', priority: 0 },\r\n      });\r\n    }\r\n    let saveList = this.state.items;\r\n    // this.sortItems(this.state.currentFilter);\r\n    saveList.push(this.state.currentItem);\r\n    window.localStorage.setItem('reactTodo', JSON.stringify(saveList));\r\n  }\r\n\r\n  toggleItem = e => {\r\n    let updateItems = this.state.items.map(i => {\r\n      if (i.key === e) {\r\n        i.complete = !i.complete;\r\n        return i;\r\n      }\r\n      return i;\r\n    });\r\n    this.setState({\r\n      items: updateItems\r\n    });\r\n    window.localStorage.setItem('reactTodo', JSON.stringify(updateItems));\r\n  }\r\n\r\n  deleteItem = key => {\r\n    const filteredItems = this.state.items.filter(item => {\r\n      return item.key !== key\r\n    });\r\n    this.setState({\r\n      items: filteredItems\r\n    });\r\n    window.localStorage.setItem('reactTodo', JSON.stringify(filteredItems));\r\n  }\r\n\r\n  sortItems = e => {\r\n    let filter = '';\r\n    if (typeof e === 'string') {\r\n      filter = e;\r\n    } else {\r\n      filter = e.target.value;\r\n    }\r\n\r\n    let sortedItems = this.state.items.sort((a, b) => {\r\n      if (filter === 'new') {\r\n        return new Date(b.created) - new Date(a.created);\r\n      } else if (filter === 'old') {\r\n        return new Date(a.created) - new Date(b.created);\r\n      } else if (filter === 'priority') {\r\n        return b.priority - a.priority;\r\n      } else if (filter === 'inc') {\r\n        if (a.complete === b.complete) {\r\n          return 0\r\n        } else if (a.complete) {\r\n          return 1\r\n        } else {\r\n          return -1\r\n        }\r\n      } else {\r\n        return\r\n      }\r\n    });\r\n    this.setState({\r\n      items: sortedItems,\r\n      currentFilter: filter\r\n    });\r\n    window.localStorage.setItem('reactTodoSort', JSON.stringify({ sort: filter }));\r\n  }\r\n\r\n  updateSort = str => {\r\n    this.sortItems(this.state.currentFilter);\r\n  }\r\n\r\n  changePriority = (key, dir) => {\r\n    let updatedItems = this.state.items.map(i => {\r\n      if (i.key === key) {\r\n        if (dir === 'up') {\r\n          i.priority += 1\r\n        } else if (dir === 'down') {\r\n          i.priority -= 1\r\n        }\r\n      }\r\n      return i;\r\n    });\r\n    this.setState({\r\n      items: updatedItems\r\n    });\r\n    window.localStorage.setItem('reactTodo', JSON.stringify(updatedItems));\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"App\">\r\n\r\n        <div className=\"input\">\r\n          <TodoInput\r\n            addItem={this.addItem}\r\n            inputElement={this.inputElement}\r\n            handleInput={this.handleInput}\r\n            currentItem={this.state.currentItem}\r\n          />\r\n        </div>\r\n        <div className=\"filters\">\r\n          <TodoFilters\r\n            updateSort={this.updateSort}\r\n            filter={this.state.currentFilter}\r\n            inputElement={this.inputElement}\r\n            sortItems={this.sortItems}\r\n          />\r\n        </div>\r\n        <div className=\"list\">\r\n          <TodoList\r\n            entries={this.state.items}\r\n            deleteItem={this.deleteItem}\r\n            toggleItem={this.toggleItem}\r\n            changePriority={this.changePriority}\r\n          />\r\n        </div>\r\n\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}